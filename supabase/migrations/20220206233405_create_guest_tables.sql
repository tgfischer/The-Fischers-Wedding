-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.guests
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    meal text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default" DEFAULT 'pending'::text,
    "reservationId" text COLLATE pg_catalog."default" NOT NULL,
    "firstName" text COLLATE pg_catalog."default" NOT NULL,
    "lastName" text COLLATE pg_catalog."default" NOT NULL,
    "isVaccinated" boolean NOT NULL,
    CONSTRAINT guests_pkey PRIMARY KEY (id),
    CONSTRAINT "guests_reservationId_fkey" FOREIGN KEY ("reservationId")
        REFERENCES public.reservations (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.guests
    OWNER to postgres;

ALTER TABLE IF EXISTS public.guests
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.guests TO anon;

GRANT ALL ON TABLE public.guests TO authenticated;

GRANT ALL ON TABLE public.guests TO postgres;

GRANT ALL ON TABLE public.guests TO service_role;

COMMENT ON TABLE public.guests
    IS 'The table storing the individual guests';

CREATE TABLE IF NOT EXISTS public.songs
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name text COLLATE pg_catalog."default" NOT NULL,
    artist text COLLATE pg_catalog."default" NOT NULL,
    "guestId" bigint NOT NULL,
    CONSTRAINT songs_pkey PRIMARY KEY (id),
    CONSTRAINT "songs_guestId_fkey" FOREIGN KEY ("guestId")
        REFERENCES public.guests (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.songs
    OWNER to postgres;

ALTER TABLE IF EXISTS public.songs
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.songs TO anon;

GRANT ALL ON TABLE public.songs TO authenticated;

GRANT ALL ON TABLE public.songs TO postgres;

GRANT ALL ON TABLE public.songs TO service_role;

COMMENT ON TABLE public.songs
    IS 'The song requests';
